/* eslint eqeqeq: 0 */

"use strict";

angular.module("main", ["ngAnimate", "scopeExample"])

/**
 * Services can also be registered via the $provide services
 * inside of a module config function.
 **/
.config(["$provide", function ($provide) {

	$provide.factory("Dec2Bin", function () {

		/**
   * Verify that number is an integer number
   * from: http://stackoverflow.com/a/14794066/6051978
   **/
		var isInt = function isInt(value) {

			return !isNaN(value) &&
			// This takes care of filtering out floating numbers
			parseInt(Number(value), 10) == value &&
			// Ensure that the number is decimal
			!isNaN(parseInt(value, 10));
		};

		var convertDecToBin = function convertDecToBin(decNum) {

			if (!isInt(decNum)) {

				return;
			}

			if (decNum < 0) {

				return;
			}

			var reduced = decNum;
			var binDigits = [];
			var binString = "";

			while (reduced !== 0) {

				binDigits.push(reduced % 2);
				reduced = Math.floor(reduced / 2);
			}

			for (var elem = binDigits.length - 1; elem > -1; elem--) {

				binString += binDigits[elem];
			}

			return binString;
		};

		return { dec2bin: convertDecToBin };
	});
}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uYXBwLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkcHJvdmlkZSIsImZhY3RvcnkiLCJpc0ludCIsInZhbHVlIiwiaXNOYU4iLCJwYXJzZUludCIsIk51bWJlciIsImNvbnZlcnREZWNUb0JpbiIsImRlY051bSIsInJlZHVjZWQiLCJiaW5EaWdpdHMiLCJiaW5TdHJpbmciLCJwdXNoIiwiTWF0aCIsImZsb29yIiwiZWxlbSIsImxlbmd0aCIsImRlYzJiaW4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBQSxRQUFRQyxNQUFSLENBQWUsTUFBZixFQUF1QixDQUFDLFdBQUQsRUFBYyxjQUFkLENBQXZCOztBQUVDOzs7O0FBRkQsQ0FNRUMsTUFORixDQU1TLENBQUMsVUFBRCxFQUFhLFVBQVVDLFFBQVYsRUFBb0I7O0FBRXhDQSxVQUFTQyxPQUFULENBQWlCLFNBQWpCLEVBQTRCLFlBQVk7O0FBRXZDOzs7O0FBSUEsTUFBTUMsUUFBUSxTQUFSQSxLQUFRLENBQVVDLEtBQVYsRUFBaUI7O0FBRTlCLFVBQU8sQ0FBQ0MsTUFBTUQsS0FBTixDQUFEO0FBQ047QUFDQUUsWUFBU0MsT0FBT0gsS0FBUCxDQUFULEVBQXdCLEVBQXhCLEtBQStCQSxLQUZ6QjtBQUdOO0FBQ0EsSUFBQ0MsTUFBTUMsU0FBU0YsS0FBVCxFQUFnQixFQUFoQixDQUFOLENBSkY7QUFNQSxHQVJEOztBQVVBLE1BQU1JLGtCQUFrQixTQUFsQkEsZUFBa0IsQ0FBVUMsTUFBVixFQUFrQjs7QUFFekMsT0FBSSxDQUFDTixNQUFNTSxNQUFOLENBQUwsRUFBb0I7O0FBRW5CO0FBRUE7O0FBRUQsT0FBSUEsU0FBUyxDQUFiLEVBQWdCOztBQUVmO0FBRUE7O0FBRUQsT0FBSUMsVUFBVUQsTUFBZDtBQUNBLE9BQU1FLFlBQVksRUFBbEI7QUFDQSxPQUFJQyxZQUFZLEVBQWhCOztBQUVBLFVBQU9GLFlBQVksQ0FBbkIsRUFBc0I7O0FBRXJCQyxjQUFVRSxJQUFWLENBQWVILFVBQVUsQ0FBekI7QUFDQUEsY0FBVUksS0FBS0MsS0FBTCxDQUFXTCxVQUFVLENBQXJCLENBQVY7QUFFQTs7QUFFRCxRQUFLLElBQUlNLE9BQU9MLFVBQVVNLE1BQVYsR0FBbUIsQ0FBbkMsRUFBc0NELE9BQU8sQ0FBQyxDQUE5QyxFQUFpREEsTUFBakQsRUFBeUQ7O0FBRXhESixpQkFBYUQsVUFBVUssSUFBVixDQUFiO0FBRUE7O0FBRUQsVUFBT0osU0FBUDtBQUVBLEdBakNEOztBQW1DQSxTQUFPLEVBQUNNLFNBQVNWLGVBQVYsRUFBUDtBQUVBLEVBckREO0FBdURBLENBekRPLENBTlQiLCJmaWxlIjoibWFpbi5hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgZXFlcWVxOiAwICovXG5cblwidXNlIHN0cmljdFwiO1xuXG5hbmd1bGFyLm1vZHVsZShcIm1haW5cIiwgW1wibmdBbmltYXRlXCIsIFwic2NvcGVFeGFtcGxlXCJdKVxuXHRcblx0LyoqXG5cdCAqIFNlcnZpY2VzIGNhbiBhbHNvIGJlIHJlZ2lzdGVyZWQgdmlhIHRoZSAkcHJvdmlkZSBzZXJ2aWNlc1xuXHQgKiBpbnNpZGUgb2YgYSBtb2R1bGUgY29uZmlnIGZ1bmN0aW9uLlxuXHQgKiovXG5cdC5jb25maWcoW1wiJHByb3ZpZGVcIiwgZnVuY3Rpb24gKCRwcm92aWRlKSB7XG5cdFx0XG5cdFx0JHByb3ZpZGUuZmFjdG9yeShcIkRlYzJCaW5cIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XG5cdFx0XHQvKipcblx0XHRcdCAqIFZlcmlmeSB0aGF0IG51bWJlciBpcyBhbiBpbnRlZ2VyIG51bWJlclxuXHRcdFx0ICogZnJvbTogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTQ3OTQwNjYvNjA1MTk3OFxuXHRcdFx0ICoqL1xuXHRcdFx0Y29uc3QgaXNJbnQgPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0XHRcdFx0XG5cdFx0XHRcdHJldHVybiAhaXNOYU4odmFsdWUpICYmXG5cdFx0XHRcdFx0Ly8gVGhpcyB0YWtlcyBjYXJlIG9mIGZpbHRlcmluZyBvdXQgZmxvYXRpbmcgbnVtYmVyc1xuXHRcdFx0XHRcdHBhcnNlSW50KE51bWJlcih2YWx1ZSksIDEwKSA9PSB2YWx1ZSAmJlxuXHRcdFx0XHRcdC8vIEVuc3VyZSB0aGF0IHRoZSBudW1iZXIgaXMgZGVjaW1hbFxuXHRcdFx0XHRcdCFpc05hTihwYXJzZUludCh2YWx1ZSwgMTApKTtcblx0XHRcdFx0XG5cdFx0XHR9O1xuXHRcdFx0XG5cdFx0XHRjb25zdCBjb252ZXJ0RGVjVG9CaW4gPSBmdW5jdGlvbiAoZGVjTnVtKSB7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZiAoIWlzSW50KGRlY051bSkpIHtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XG5cdFx0XHRcdH1cblx0XHRcdFx0XG5cdFx0XHRcdGlmIChkZWNOdW0gPCAwKSB7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHRsZXQgcmVkdWNlZCA9IGRlY051bTtcblx0XHRcdFx0Y29uc3QgYmluRGlnaXRzID0gW107XG5cdFx0XHRcdGxldCBiaW5TdHJpbmcgPSBcIlwiO1xuXHRcdFx0XHRcblx0XHRcdFx0d2hpbGUgKHJlZHVjZWQgIT09IDApIHtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRiaW5EaWdpdHMucHVzaChyZWR1Y2VkICUgMik7XG5cdFx0XHRcdFx0cmVkdWNlZCA9IE1hdGguZmxvb3IocmVkdWNlZCAvIDIpO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHRmb3IgKGxldCBlbGVtID0gYmluRGlnaXRzLmxlbmd0aCAtIDE7IGVsZW0gPiAtMTsgZWxlbS0tKSB7XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0YmluU3RyaW5nICs9IGJpbkRpZ2l0c1tlbGVtXTtcblx0XHRcdFx0XHRcblx0XHRcdFx0fVxuXHRcdFx0XHRcblx0XHRcdFx0cmV0dXJuIGJpblN0cmluZztcblx0XHRcdFx0XG5cdFx0XHR9O1xuXHRcdFx0XG5cdFx0XHRyZXR1cm4ge2RlYzJiaW46IGNvbnZlcnREZWNUb0Jpbn07XG5cdFx0XHRcblx0XHR9KTtcblx0XHRcblx0fV0pO1xuIl19
