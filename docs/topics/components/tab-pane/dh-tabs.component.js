"use strict";

var TabsController = function TabsController() {

	var ctrl = this;

	var panes = [];

	ctrl.panes = panes;

	/**
  * Select a pane
  * @param pane The pane to be selected
  */
	ctrl.select = function (pane) {

		// Unselect all panes
		angular.forEach(panes, function (paneItem) {

			paneItem.selected = false;
		});

		console.log("Making " + pane.title + " selected!");

		// Select the passed pane
		pane.selected = true;
	};

	/**
  * Add pane to the array of panes
  * @param pane The pane to be added
  */
	ctrl.addPane = function (pane) {

		/**
   * If there are no panes, select the new pane so that there is
   * always at least one active pane.
   */

		if (panes.length === this.defaultTab) {

			ctrl.select(pane);
		}

		panes.push(pane);
	};
};

angular.module("main").component("dhTabs", {

	transclude: true,
	controller: TabsController,
	templateUrl: "topics/components/tab-pane/dh-tabs.html",
	bindings: { defaultTab: "<" }

});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvcGljcy9jb21wb25lbnRzL3RhYi1wYW5lL2RoLXRhYnMuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbIlRhYnNDb250cm9sbGVyIiwiY3RybCIsInBhbmVzIiwic2VsZWN0IiwicGFuZSIsImFuZ3VsYXIiLCJmb3JFYWNoIiwicGFuZUl0ZW0iLCJzZWxlY3RlZCIsImNvbnNvbGUiLCJsb2ciLCJ0aXRsZSIsImFkZFBhbmUiLCJsZW5ndGgiLCJkZWZhdWx0VGFiIiwicHVzaCIsIm1vZHVsZSIsImNvbXBvbmVudCIsInRyYW5zY2x1ZGUiLCJjb250cm9sbGVyIiwidGVtcGxhdGVVcmwiLCJiaW5kaW5ncyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsaUJBQWlCLFNBQWpCQSxjQUFpQixHQUFZOztBQUVsQyxLQUFNQyxPQUFPLElBQWI7O0FBRUEsS0FBTUMsUUFBUSxFQUFkOztBQUVBRCxNQUFLQyxLQUFMLEdBQWFBLEtBQWI7O0FBRUE7Ozs7QUFJQUQsTUFBS0UsTUFBTCxHQUFjLFVBQVVDLElBQVYsRUFBZ0I7O0FBRTdCO0FBQ0FDLFVBQVFDLE9BQVIsQ0FBZ0JKLEtBQWhCLEVBQXVCLFVBQVVLLFFBQVYsRUFBb0I7O0FBRTFDQSxZQUFTQyxRQUFULEdBQW9CLEtBQXBCO0FBRUEsR0FKRDs7QUFNQUMsVUFBUUMsR0FBUixhQUFzQk4sS0FBS08sS0FBM0I7O0FBRUE7QUFDQVAsT0FBS0ksUUFBTCxHQUFnQixJQUFoQjtBQUVBLEVBZEQ7O0FBZ0JBOzs7O0FBSUFQLE1BQUtXLE9BQUwsR0FBZSxVQUFVUixJQUFWLEVBQWdCOztBQUU5Qjs7Ozs7QUFLQSxNQUFJRixNQUFNVyxNQUFOLEtBQWlCLEtBQUtDLFVBQTFCLEVBQXNDOztBQUVyQ2IsUUFBS0UsTUFBTCxDQUFZQyxJQUFaO0FBRUE7O0FBRURGLFFBQU1hLElBQU4sQ0FBV1gsSUFBWDtBQUVBLEVBZkQ7QUFpQkEsQ0FqREQ7O0FBbURBQyxRQUFRVyxNQUFSLENBQWUsTUFBZixFQUNFQyxTQURGLENBQ1ksUUFEWixFQUNzQjs7QUFFcEJDLGFBQVksSUFGUTtBQUdwQkMsYUFBWW5CLGNBSFE7QUFJcEJvQixjQUFhLHlDQUpPO0FBS3BCQyxXQUFVLEVBQUNQLFlBQVksR0FBYjs7QUFMVSxDQUR0QiIsImZpbGUiOiJ0b3BpY3MvY29tcG9uZW50cy90YWItcGFuZS9kaC10YWJzLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBUYWJzQ29udHJvbGxlciA9IGZ1bmN0aW9uICgpIHtcblx0XG5cdGNvbnN0IGN0cmwgPSB0aGlzO1xuXHRcblx0Y29uc3QgcGFuZXMgPSBbXTtcblx0XG5cdGN0cmwucGFuZXMgPSBwYW5lcztcblx0XG5cdC8qKlxuXHQgKiBTZWxlY3QgYSBwYW5lXG5cdCAqIEBwYXJhbSBwYW5lIFRoZSBwYW5lIHRvIGJlIHNlbGVjdGVkXG5cdCAqL1xuXHRjdHJsLnNlbGVjdCA9IGZ1bmN0aW9uIChwYW5lKSB7XG5cdFx0XG5cdFx0Ly8gVW5zZWxlY3QgYWxsIHBhbmVzXG5cdFx0YW5ndWxhci5mb3JFYWNoKHBhbmVzLCBmdW5jdGlvbiAocGFuZUl0ZW0pIHtcblx0XHRcdFxuXHRcdFx0cGFuZUl0ZW0uc2VsZWN0ZWQgPSBmYWxzZTtcblx0XHRcdFxuXHRcdH0pO1xuXHRcdFxuXHRcdGNvbnNvbGUubG9nKGBNYWtpbmcgJHtwYW5lLnRpdGxlfSBzZWxlY3RlZCFgKTtcblx0XHRcblx0XHQvLyBTZWxlY3QgdGhlIHBhc3NlZCBwYW5lXG5cdFx0cGFuZS5zZWxlY3RlZCA9IHRydWU7XG5cdFx0XG5cdH07XG5cdFxuXHQvKipcblx0ICogQWRkIHBhbmUgdG8gdGhlIGFycmF5IG9mIHBhbmVzXG5cdCAqIEBwYXJhbSBwYW5lIFRoZSBwYW5lIHRvIGJlIGFkZGVkXG5cdCAqL1xuXHRjdHJsLmFkZFBhbmUgPSBmdW5jdGlvbiAocGFuZSkge1xuXHRcdFxuXHRcdC8qKlxuXHRcdCAqIElmIHRoZXJlIGFyZSBubyBwYW5lcywgc2VsZWN0IHRoZSBuZXcgcGFuZSBzbyB0aGF0IHRoZXJlIGlzXG5cdFx0ICogYWx3YXlzIGF0IGxlYXN0IG9uZSBhY3RpdmUgcGFuZS5cblx0XHQgKi9cblx0XHRcblx0XHRpZiAocGFuZXMubGVuZ3RoID09PSB0aGlzLmRlZmF1bHRUYWIpIHtcblx0XHRcdFxuXHRcdFx0Y3RybC5zZWxlY3QocGFuZSk7XG5cdFx0XHRcblx0XHR9XG5cdFx0XG5cdFx0cGFuZXMucHVzaChwYW5lKTtcblx0XHRcblx0fTtcblx0XG59O1xuXG5hbmd1bGFyLm1vZHVsZShcIm1haW5cIilcblx0LmNvbXBvbmVudChcImRoVGFic1wiLCB7XG5cdFx0XG5cdFx0dHJhbnNjbHVkZTogdHJ1ZSxcblx0XHRjb250cm9sbGVyOiBUYWJzQ29udHJvbGxlcixcblx0XHR0ZW1wbGF0ZVVybDogXCJ0b3BpY3MvY29tcG9uZW50cy90YWItcGFuZS9kaC10YWJzLmh0bWxcIixcblx0XHRiaW5kaW5nczoge2RlZmF1bHRUYWI6IFwiPFwifVxuXHRcdFxuXHR9KTtcblxuIl19
